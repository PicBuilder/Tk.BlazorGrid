<div>
    @foreach (var item in MultiSelectItemsSelected.Data)
    {
        <div class="btn-group">
            <button type="button" class="btn btn-light btn-sm">@item.Text</button>
            <button type="button"
                    class="btn btn-light text-danger btn-sm">
                &times;
            </button>
        </div>
    }
</div>

<div class="mt-2">
    <select @bind="Selected" class="form-control">
        <option value="0"></option>
        @foreach (var item in MultiSelectItemsDisplay.Data)
        {
            <option value="@item.Id">@item.Text</option>
        }
    </select>
    <div>selected value: @Captured</div>
</div>

@code {
    int _Selected;
    int Captured;

    protected enum ItemAction
    {
        Add = 1,
        Remove
    }

    public MultiSelectItems MultiSelectItemsDisplay { get; set; }

    [Parameter]
    public MultiSelectItems MultiSelectItems { get; set; }

    [Parameter]
    public MultiSelectItemsSelected MultiSelectItemsSelected { get; set; }

    [Parameter]
    public EventCallback<MultiSelectItemsSelected> OnItemClick { get; set; }

    protected override void OnInitialized()
    {
        InitMultiSelectItems();
    }

    protected void InitMultiSelectItems()
    {
        MultiSelectItemsDisplay = MultiSelectItems;
        MultiSelectItemsDisplay.Data.OrderBy(x => x.Text);

        if (MultiSelectItems != null && MultiSelectItemsSelected != null)
        {
            foreach (var selectedItem in MultiSelectItemsSelected.Data)
            {
                var itemRecord = MultiSelectItemsDisplay.Data.Where(x => x.Id == selectedItem.Id).FirstOrDefault();
                MultiSelectItemsDisplay.Data.Remove(itemRecord);
            }
        }
    }

    private int Selected
    {
        get { return _Selected; }
        set
        {
            Captured = value; //store the captured value
            _Selected = 0;   //reset the drop down
        }
    }   
}
