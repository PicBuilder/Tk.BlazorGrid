@page "/fetchdata"
@using Tk.BlazorGrid.Shared
@using TkGrid
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>
<ul>
    <li>Uses Bootstrap 4 table and form control styling</li>
    <li>Server side paging only (only min specified records are returned)</li>
</ul>

@if (weatherForecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <GridHeader gridBase="grid" OnPageSizeChange="GetPageData" OnPageSearch="GetPageData" />

    <table class="table">
        <thead>
            <tr>
                <GridColumnHeader gridBase="grid"
                                          columnName="@nameof(weatherForecast.Date)"
                                          displayName="Date"
                                          OnSort="GetPageData" />

                <GridColumnHeader gridBase="grid"
                                          columnName="@nameof(weatherForecast.TemperatureC)"
                                          displayName="Temp. (C)"
                                          OnSort="GetPageData" />

                <GridColumnHeader gridBase="grid"
                                          columnName="@nameof(weatherForecast.TemperatureF)"
                                          displayName="Temp. (F)"
                                          OnSort="GetPageData" />

                <GridColumnHeader gridBase="grid"
                                          columnName="@nameof(weatherForecast.Summary)"
                                          displayName="Summary"
                                          OnSort="GetPageData" />     
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in weatherForecasts.Data)
            {
            <tr>
                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                <td>@forecast.TemperatureF</td>
                <td>@forecast.Summary</td>
                <td>
                    <a href="@($"WeatherForecast/edit/{forecast.Id}")" class="btn btn-link">
                        <span class="oi oi-pencil text-secondary small" aria-hidden="true"></span>
                    </a>
                </td>
            </tr>
            }
        </tbody>
    </table>

    <GridFooter gridBase="grid" OnPageClick="GetPageData" />
}

@code {
    protected GridBase grid { get; set; } = new GridBase();
    protected GridData<WeatherForecast> weatherForecasts;
    protected WeatherForecast weatherForecast;
    
    protected override async Task OnInitializedAsync()
    {
        await GetPageData();
    }

    protected async Task GetPageData()
    {
        weatherForecasts = await Http.GetFromJsonAsync<GridData<WeatherForecast>>($"WeatherForecast?search={grid.Search}&page={grid.CurrentPage}&pageSize={grid.PageSize}&sortColumnName={grid.SortColumnName}&sortDirection={grid.SortDirection}");

        if (weatherForecasts != null)
        {
            grid.TotalCount = weatherForecasts.TotalCount;
            grid.ApplyGrid();
        }
    }

}
